pipeline {
  agent none
  options {
    disableConcurrentBuilds()
    buildDiscarder(logRotator(numToKeepStr: '8', daysToKeepStr: '20'))
    timeout(time: 2, unit: 'HOURS')
  }
  stages {
    stage('build') {
      agent {
        dockerfile {
          dir 'jenkins'
          // map volumes so we still have access to output
          args '--gpus 1 -v $HOME/output:/output'
        }
      }
      environment {
        HOME = pwd(tmp:false)
        OMP_NUM_THREADS = 4
      }
      steps {
        sh 'python3.11 -m venv --system-site-packages $HOME'
        sh '''#!/bin/bash -ex
              source $HOME/bin/activate
              pip install -U pip
              pip install -r requirements.txt
              python3.11 -c "import torch; print(torch.cuda.current_device())"
              cd docs
              make html
              cp -r build/html /output
           '''
      }
    }
    stage('publish') {
      agent any
      environment {
        HOME = pwd(tmp:false)
        PROJECT_NAME = "cshl-vision-2024"
      }
      steps{
        // from https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/githubs-ssh-key-fingerprints
        // sh '''mkdir -p ~/.ssh
        //       echo "github.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOMqqnkVzrm0SdG6UOoqKLsabgH5C9okWi0dh2l9GKJl" >> ~/.ssh/known_hosts
        //       echo "github.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEmKSENjQEezOmxkZMy7opKgwFB9nkt5YRrYMjNuG5N87uRgg6CLrbo5wAdT/y6v0mKV0U2w0WZ2YB/++Tpockg=" >> ~/.ssh/known_hosts
        //       echo "github.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCj7ndNxQowgcQnjshcLrqPEiiphnt+VTTvDP6mHBL9j1aNUkY4Ue1gvwnGLVlOhGeYrnZaMgRK6+PKCUXaDbC7qtbW8gIkhL7aGCsOr/C56SJMy/BCZfxd1nWzAOxSDPgVsmerOBYfNqltV9/hWCqBywINIR+5dIg6JTJ72pcEpEjcYgXkE2YEFXV1JHnsKgbLWNlhScqb2UmyRkQyytRLtL+38TGxkxCflmO+5Z8CSSNY7GidjMIZ7Q4zMjA2n1nGrlTDkzwDCsw+wqFPGQA179cnfGWOWRVruj16z6XyvxvjJwbz0wQZ75XK5tKSb7FNyeIEs4TT4jk+S4dhPeAUC5y+bDYirYgM4GC7uEnztnZyaVWQ7B381AK4Qdrwt51ZqExKbQpTUNn+EjqoTwvqNj4kqx5QUCI0ThS/YkOxJCXmPUWZbhjpCg56i+2aB6CmK2JGhn57K5mj0MNdBXA4/WnwH6XoPWJzK5Nyu2zB3nAZp+S5hpQs+p1vN1/wsjk=" >> ~/.ssh/known_hosts
        //    '''
        lock('plenoptic_workshop_publish') {
          sh "echo \$(ls)"
          sh "echo \$(pwd)"
          dir(path: '../plenoptic-workshops') {
            git(branch: 'main', changelog: false, poll: false, url: 'ssh://git@github.com/plenoptic-org/plenoptic-workshops.git', credentialsId: "ssh")
            sh "echo \$(ls)"
            sh "echo \$(pwd)"
            sh "echo \$(ls ..)"
            sh "echo \$(ls \$HOME/docs)"
            sh "echo \$(ls \$HOME/docs/build)"
            sh """#!/bin/bash -ex
                DOCS_DIR=\$PROJECT_NAME/pulls/${env.BRANCH_NAME.replace('PR-', '')}
                commit=\$(git rev-parse HEAD)
                rm -rf \$DOCS_DIR
                mkdir -p \$DOCS_DIR
                cp -rp \$HOME/docs/build/html/* \$DOCS_DIR
                git add -A .
                git commit --allow-empty -m 'Generated documentation for \$DOCS_DIR' -m '${env.BUILD_TAG} \$commit'
                git push origin main
             """
          }
        }
      }
    }
  }
  post {
    failure {
      emailext subject: '$PROJECT_NAME - Build #$BUILD_NUMBER - $BUILD_STATUS',
        body: '''$PROJECT_NAME - Build #$BUILD_NUMBER - $BUILD_STATUS

Check console output at $BUILD_URL to view full results.

Building $BRANCH_NAME for $CAUSE
$JOB_DESCRIPTION

Chages:
$CHANGES

End of build log:
${BUILD_LOG,maxLines=200}
''',
	      recipientProviders: [
		    [$class: 'DevelopersRecipientProvider'],
	    ],
	      replyTo: '$DEFAULT_REPLYTO'
    }
  }
}
